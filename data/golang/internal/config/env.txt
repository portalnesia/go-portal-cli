/*
 * Copyright (c) Portalnesia - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Putu Aditya <aditya@portalnesia.com>
 */

package config

import (
	"os"
)

type envImpl struct {
	build string
}

func (s envImpl) Build() string {
	return s.build
}

func (s envImpl) IsProduction() bool {
	return s.build == "production"
}

func (s envImpl) IsDev() bool {
	return s.build == "development"
}

func (s envImpl) IsBeta() bool {
	return s.build == "beta"
}

func (s envImpl) IsTesting() bool {
	return os.Getenv("PN_ENV") == "test"
}

func (s envImpl) IsLocal() bool {
	return s.build == ""
}

func (s envImpl) IsLocalDev() bool {
	return s.IsDev() || s.IsLocal()
}

func (s envImpl) IsServer() bool {
	return s.IsProduction() || s.IsBeta() || s.IsDev()
}

func (s envImpl) EnvString() (env string) {
	if s.IsLocal() {
		return "development"
	} else if s.IsDev() {
		return "development"
	} else if s.IsBeta() {
		return "beta"
	} else {
		return "production"
	}
}

func (s envImpl) EnvShortString() (env string) {
	if s.IsLocal() {
		return "local"
	} else if s.IsDev() {
		return "dev"
	} else if s.IsBeta() {
		return "beta"
	} else {
		return ""
	}
}

func (s envImpl) LogString() (env string) {
	if s.IsLocal() {
		return "local"
	}
	str := s.EnvString()
	return str
}
