/*
 * Copyright (c) Portalnesia - All Rights Reserved
 * Unauthorized copying of this file, via any medium is strictly prohibited
 * Proprietary and confidential
 * Written by Putu Aditya <aditya@portalnesia.com>
 */

package context

import (
	context2 "context"
	"github.com/mssola/user_agent"
	"sync"
)

type Context struct {
	IP            string
	Browser       user_agent.UserAgent
	BrowserString string
	Method        string
	ctxDB        context2.Context
    ctxWIthoutDB context2.Context

    mu *sync.Mutex
}

func NewContext() *Context {
	return &Context{
		mu: &sync.Mutex{},
	}
}

func (c *Context) Context(ctx ...context2.Context) context2.Context {
	if len(ctx) > 0 {
		c.ctxWIthoutDB = ctx[0]
	}
	if c.ctxWIthoutDB == nil {
		c.ctxWIthoutDB = context2.Background()
	}
	return c.ctxWIthoutDB
}

func (c *Context) DBContext(ctx ...context2.Context) context2.Context {
	if len(ctx) > 0 {
		c.ctxDB = ctx[0]
	}
	if c.ctxDB == nil {
		return c.Context()
	}
	return c.ctxDB
}

func (c *Context) GetIP() string {
	return c.IP
}

func (c *Context) GetBrowser() user_agent.UserAgent { return c.Browser }

func (c *Context) GetBrowserString() string { return c.BrowserString }

func (c *Context) GetMethod() string { return c.Method }
